@model List<Library_Management.Models.Book>
@{
    ViewData["Title"] = "Available Books";
    var borrowedBookIds = ViewBag.BorrowedBookIds as List<Guid>;
}

<style>
    body {
        background: linear-gradient(to right, #f2f6ff, #d9e4f5);
    }

    .page-header {
        background: linear-gradient(to right, #4a90e2, #6fb1fc);
        color: white;
        padding: 50px 0;
        border-bottom-left-radius: 60px;
        border-bottom-right-radius: 60px;
        text-align: center;
        margin-bottom: 40px;
    }

    .custom-table {
        border-radius: 22px;
        overflow: hidden;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
    }

        .custom-table thead {
            background-color: #4a90e2;
            color: white;
        }

    .btn-rounded {
        border-radius: 20px !important;
        padding: 6px 14px;
    }

    .search-form input {
        max-width: 400px;
    }

    .alert {
        border-radius: 22px;
    }

    .price-display {
        font-weight: 500;
        color: #28a745;
    }

    .quantity-badge {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 0.85em;
        font-weight: 500;
    }

    .quantity-available {
        background-color: #d4edda;
        color: #155724;
    }

    .quantity-low {
        background-color: #fff3cd;
        color: #856404;
    }

    .quantity-out {
        background-color: #f8d7da;
        color: #721c24;
    }

    .logout-button {
        position: absolute;
        top: 20px;
        right: 30px;
        z-index: 999;
    }

        .logout-button form {
            display: inline;
        }

        .logout-button button {
            border-radius: 22px;
            padding: 8px 20px;
            border: none;
            color: white;
            transition: background-color 0.3s ease;
        }
        
        .logout-button button:hover {
                background-color: darkred;
        }



</style>

<div class="logout-button">
    <form action="@Url.Action("Index", "Home")" method="post">
        <button type="submit" class="btn btn-danger rounded-pill px-4">🔓 Logout</button>
    </form>
</div>


<div class="page-header">
    <h1 class="display-6">📚 Welcome to the Library</h1>
    <p class="lead">Browse and borrow your favorite books</p>
</div>

<div class="container mb-5">

    <form method="get" class="d-flex mb-4 search-form" role="search" action="@Url.Action("UserHome", "UserHome")">
        <input type="text" name="search" value="@Context.Request.Query["search"]" placeholder="Search books..." class="form-control rounded-pill shadow-sm" />
        <button type="submit" class="btn btn-primary ms-3 btn-rounded shadow-sm">Search</button>
        @if (!string.IsNullOrEmpty(Context.Request.Query["search"]))
        {
            <a href="@Url.Action("UserHome", "UserHome")" class="btn btn-outline-secondary ms-2 btn-rounded shadow-sm">Clear</a>
        }
    </form>

    @if (TempData["BorrowedBefore"] != null)
    {
        <div class="alert alert-info shadow-sm">@TempData["BorrowedBefore"]</div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success shadow-sm">@TempData["Success"]</div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger shadow-sm">@TempData["Error"]</div>
    }

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success shadow-sm">@TempData["Message"]</div>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning text-center shadow-sm">
            @if (!string.IsNullOrEmpty(Context.Request.Query["search"]))
            {
                <span>No books found matching your search "<strong>@Context.Request.Query["search"]</strong>".</span>
            }
            else
            {
                <span>No books are currently available in the library.</span>
            }
        </div>
    }
    else
    {
        <div class="table-responsive custom-table">
            <table class="table table-bordered table-hover mb-0">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Author</th>
                        <th>Rent Price</th>
                        <th>Available Quantity</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in Model)
                    {
                        <tr>
                            <td>
                                <strong>@book.title</strong>
                                @if (!string.IsNullOrEmpty(book.ISBN))
                                {
                                    <br>
                                    <small class="text-muted">ISBN: @book.ISBN</small>
                                }
                            </td>
                            <td>@book.author</td>
                            <td>
                                <span class="price-display">
                                    Rs. @book.rentPrice.ToString("0.00")
                                    @* Debug: Raw value = @book.rentPrice *@
                                </span>
                            </td>
                            <td>
                                <span class="quantity-badge @(book.quantity <= 0 ? "quantity-out" : book.quantity <= 2 ? "quantity-low" : "quantity-available")">
                                    @book.quantity @(book.quantity == 1 ? "copy" : "copies")
                                </span>
                            </td>
                            <td>
                                @if (borrowedBookIds != null && borrowedBookIds.Contains(book.Id))
                                {
                                    <button class="btn btn-warning btn-sm btn-rounded" disabled>
                                        <i class="fas fa-check"></i> Already Borrowed
                                    </button>
                                }
                                else if (book.quantity <= 0)
                                {
                                    <button class="btn btn-secondary btn-sm btn-rounded" disabled>
                                        <i class="fas fa-times"></i> Out of Stock
                                    </button>
                                }
                                else
                                {
                                    <form method="post" action="@Url.Action("BorrowBook", "UserHome")" class="d-inline">
                                        <div class="input-group input-group-sm">
                                            <input type="hidden" name="bookId" value="@book.Id" />
                                            <input type="date" name="returnDate"
                                                   class="form-control"
                                                   style="max-width: 140px;"
                                                   min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")"
                                                   max="@DateTime.Today.AddDays(20).ToString("yyyy-MM-dd")"
                                                   value="@DateTime.Today.AddDays(7).ToString("yyyy-MM-dd")"
                                                   required />
                                            <button type="submit" class="btn btn-success btn-sm btn-rounded ms-2">
                                                <i class="fas fa-book"></i> Borrow
                                            </button>
                                        </div>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (!string.IsNullOrEmpty(Context.Request.Query["search"]))
        {
            <div class="mt-3">
                <small class="text-muted">
                    Found @Model.Count() book(s) matching "@Context.Request.Query["search"]"
                </small>
            </div>
        }
    }

    <div class="mt-4 text-center">
        <a href="@Url.Action("UserHome", "UserHome")" class="btn btn-outline-primary btn-rounded me-2">
            <i class="fas fa-list"></i> View My Borrowed Books
        </a>
        <a href="@Url.Action("BorrowHistory", "UserHome")" class="btn btn-outline-info btn-rounded">
            <i class="fas fa-history"></i> View Borrow History
        </a>
    </div>

</div>
