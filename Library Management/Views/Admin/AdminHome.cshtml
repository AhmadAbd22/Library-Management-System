@{
    ViewData["Title"] = "Admin Dashboard";
    var searchResults = ViewBag.FilteredBooks as List<Library_Management.Models.Book>;
}

<style>
    body {
    background: linear-gradient(to right, #d9e4f5, #f2f6ff);
    }

    .dashboard-card {
    background-color: #ffffff;
    border-radius: 22px;
    padding: 40px;
    height: 250px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    font-weight: 600;
    text-align: center;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .dashboard-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    }

    .dashboard-card a {
    color: #4a90e2;
    text-decoration: none;
    }

    .form-control {
    border-radius: 22px !important;
    padding: 10px 20px;
    }

    .btn {
    border-radius: 22px !important;
    padding: 10px 20px;
    }

    .header-section {
    background: linear-gradient(to right, #4a90e2, #6fb1fc);
    color: white;
    padding: 60px 0;
    border-bottom-left-radius: 60px;
    border-bottom-right-radius: 60px;
    }

    .header-section h2 {
    font-weight: 700;
    }

    .book-card {
    background-color: #f9f9f9;
    border-radius: 16px;
    padding: 20px;
    border-left: 5px solid #4a90e2;
    margin-bottom: 15px;
    }

    .logout-button {
        position: absolute;
        top: 20px;
        right: 30px;
        z-index: 999;
    }
    
    .logout-button form {
            display: inline;
    }
    
    .logout-button button {
            border-radius: 22px;
            padding: 8px 20px;
            border: none;
            color: white;
            transition: background-color 0.3s ease;
    }
    
    .logout-button button:hover {
                background-color: darkred;
    }

</style>

@if (TempData["Error"] != null)
{
    <div class="alert alert-info shadow-sm">@TempData["Error"]</div>
}


<div class="logout-button">
    <form action="@Url.Action("Index", "Home")" method="post">
        <button type="submit" class="btn btn-danger rounded-pill px-4">🔓 Logout</button>
    </form>
</div>


<div class="header-section text-center">
    <div class="container">
        <h2 class="display-5">📚 Admin Dashboard</h2>
        <p class="lead">Manage your library and keep everything organized</p>
    </div>
</div>

<div class="container my-5">

    <div class="row g-4 mb-4">
        <div class="col-md-6">
            <div class="dashboard-card">
                <a href="@Url.Action("BookList", "Admin")">📖<br />Manage Books</a>
            </div>
        </div>
        <div class="col-md-6">
            <div class="dashboard-card">
                <a href="@Url.Action("AddBook", "Admin")">➕<br />Add New Book</a>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <form action="@Url.Action("AdminHome", "Admin")" method="get" class="d-flex justify-content-center">
                <input type="text" name="search" class="form-control me-2 w-50" placeholder="Search books..." value="@Context.Request.Query["search"]" />
                <button type="submit" class="btn btn-outline-secondary">🔍 Search</button>
            </form>
        </div>
    </div>

    <div class="mt-4">
        @if (searchResults != null && searchResults.Any())
        {
            <h5 class="mb-3">Search Results:</h5>
            @foreach (var book in searchResults)
            {
                <div class="book-card">
                    <strong>@book.title</strong><br />
                    <span class="text-muted">Author: @book.author</span>
                </div>
            }
        }
        else if (Context.Request.Query.ContainsKey("search"))
        {
            <p class="text-muted">No books found matching your search.</p>
        }
    </div>
</div>
